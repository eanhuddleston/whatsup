<div id="map" style="width: 600px; height: 400px;"></div>

<script src="http://maps.google.com/maps/api/js?sensor=false&callback=initialize&v=3.11" 
    type="text/javascript"></script>

<script type="text/javascript">
function initialize() {
  var events_within_range = <%= @events_within_range.to_json.html_safe %>
  
  var locs_within_range = []
  for (i = 0; i < events_within_range.length; i++) {
    locs_within_range[i] = [events_within_range[i]['title'], events_within_range[i]['latitude'], 
        events_within_range[i]['longitude']];
  }

  var trimmed_events = <%= @trimmed_events.to_json.html_safe %>

  var locations = []
  for (i = 0; i < trimmed_events.length; i++) {
    locations[i] = [trimmed_events[i]['title'], trimmed_events[i]['latitude'], 
        trimmed_events[i]['longitude']];
  }

  var map = new google.maps.Map(document.getElementById('map'), {
    zoom: 10,
    center: new google.maps.LatLng(-33.92, 151.25),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  // map.addListener("tilesloaded", function() {

    // Add only events of selected categories to map
    for (var i = 0; i < locations.length; i++) { 
      console.log("it goes!");
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });

      var infoWindow = new google.maps.InfoWindow();

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infoWindow.setContent(locations[i][0]);
          infoWindow.open(map, marker);
        }
      })(marker, i));
    }

    var bounds = new google.maps.LatLngBounds();

    // Set map bounds to include all events within range, even if
    // filtered out by category
    for (var j = 0; j < locs_within_range.length; j++) {
      var myLatLng = new google.maps.LatLng(locs_within_range[j][1], locs_within_range[j][2]);
      bounds.extend(myLatLng);
      map.fitBounds(bounds);
    }

  // });

}
</script>

<h3>Events within <%= @distance %> miles</h3>

<%= form_tag home_url, :method => :get do %>
    <%= text_field_tag :distance %>
    Search Distance
    <br>
    <% @avail_categories.each do |category| %>
      <%= check_box_tag(
            "categories[]",
            category.id,
            @selected_categories.include?(category)
          )
      %>
    <%= category.name %><br>
  <% end %>
  <%= hidden_field_tag :prev_distance, @distance %>
  <%= submit_tag "Update View" %>

<% end %>

<ul>
<% @trimmed_events.each do |event| %>
  <li><%= link_to event.title, event %> (<%= event.distance.round(2) %> miles)</li>
<% end %>
</ul>

<br>
<%= link_to "Add Event", new_event_url %>
<br>
<%= link_to "All Events", events_url %>
