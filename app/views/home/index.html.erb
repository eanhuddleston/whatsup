<div id="map" style="width: 600px; height: 400px;"></div>

<script src="http://maps.google.com/maps/api/js?sensor=false&callback=initialize&v=3.11" 
    type="text/javascript"></script>

<script type="text/javascript">

window.user_loc = <%= @user_loc.to_json.html_safe %>
window.events_within_range = <%= @events_within_range.to_json.html_safe %>
window.trimmed_events = <%= @trimmed_events.to_json.html_safe %>;

function initialize() {
  var eM = new eventManager();
  eM.fillEventArrays();
  eM.instantiateMap();
  eM.addHomeMarker();
  eM.extendBounds();
  eM.addEventMarkers();
}

function eventManager() {
  var that = this;
  that.locs_within_range = [];
  that.locations = [];
  that.map = null;
}

eventManager.prototype.fillEventArrays = function() {
  var that = this;
  
  for (i = 0; i < events_within_range.length; i++) {
    that.locs_within_range[i] = [events_within_range[i]['title'], events_within_range[i]['latitude'], 
        events_within_range[i]['longitude']];
  }

  for (i = 0; i < trimmed_events.length; i++) {
    that.locations[i] = [trimmed_events[i]['title'], trimmed_events[i]['latitude'], 
        trimmed_events[i]['longitude']];
  }
};

eventManager.prototype.instantiateMap = function() {
  var that = this;

  that.map = new google.maps.Map(document.getElementById('map'), {
    zoom: 10,
    center: new google.maps.LatLng(user_loc[0], user_loc[1]),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
}

eventManager.prototype.addHomeMarker = function() {
  var that = this;

  // Add home marker in green
  var marker = new google.maps.Marker({
    position: new google.maps.LatLng(user_loc[0], user_loc[1]),
    icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
    map: that.map
  });
}

eventManager.prototype.extendBounds = function() {
  var that = this;

  var bounds = new google.maps.LatLngBounds();

  // Set map bounds to include all events within range, even if
  // filtered out by category
  for (var j = 0; j < that.locs_within_range.length; j++) {
    var myLatLng = new google.maps.LatLng(that.locs_within_range[j][1], that.locs_within_range[j][2]);
    bounds.extend(myLatLng);
    that.map.fitBounds(bounds);
  }
}

eventManager.prototype.addEventMarkers = function() {
  // map.addListener("tilesloaded", function() {

  var that = this;

  // Add only events of selected categories to map
  for (var i = 0; i < that.locations.length; i++) { 
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(that.locations[i][1], that.locations[i][2]),
      map: that.map
    });

    var infoWindow = new google.maps.InfoWindow();

    google.maps.event.addListener(marker, 'click', (function(marker, i) {
      return function() {
        infoWindow.setContent(that.locations[i][0]);
        infoWindow.open(that.map, marker);
      }
    })(marker, i));
  }
  // });
}

</script>

<h3>Events within <%= @distance %> miles</h3>

<%= form_tag home_url, :method => :get do %>
    <%= text_field_tag :distance %>
    Search Distance
    <br>
    <% @avail_categories.each do |category| %>
      <%= check_box_tag(
            "categories[]",
            category.id,
            @selected_categories.include?(category)
          )
      %>
    <%= category.name %><br>
  <% end %>
  <%= hidden_field_tag :prev_distance, @distance %>
  <%= submit_tag "Update View" %>

<% end %>

<ul>
<% @trimmed_events.each do |event| %>
  <li><%= link_to event.title, event %> (<%= event.distance.round(2) %> miles)</li>
<% end %>
</ul>

<br>
<%= link_to "Add Event", new_event_url %>
<br>
<%= link_to "All Events", events_url %>
